import requests
import json

# üì• Lire la description de l‚Äôinterface depuis un fichier JSON
with open("cahier_des_charges.json", "r", encoding="utf-8") as file:
    interface_data = file.read()

# üí¨ Prompt structur√© pour la g√©n√©ration des composants UI
PROMPT_UI = f"""
Tu es un expert en conception d‚Äôinterfaces utilisateur m√©tier.

Voici la description d‚Äôune interface √† cr√©er :
{interface_data}

G√©n√®re les √©l√©ments suivants :
- composants UI (ex : TextField, Button, Checkbox, Select)
- leur label
- type de champ (texte, nombre, pi√®ce jointe, date, etc.)
- disposition (horizontal / vertical)
- r√®gles de validation associ√©es

R√©ponds uniquement avec un JSON structur√© sans aucun texte autour ni caract√®res comme (```json).
"""

# ‚öôÔ∏è Param√®tres API Ollama
OLLAMA_URL = "http://localhost:11434/api/generate"
MODEL = "llama3"  # üí° Change selon le mod√®le install√©

# üì° Envoi du prompt √† Ollama
response = requests.post(OLLAMA_URL, json={
    "model": MODEL,
    "prompt": PROMPT_UI,
    "stream": False
})

# üì§ Sauvegarder la r√©ponse dans un fichier JSON
if response.status_code == 200:
    result_text = response.json()["response"]

    try:
        # Tentative de validation JSON
        result_json = json.loads(result_text)

        with open("etape4_output.json", "w", encoding="utf-8") as out_file:
            json.dump(result_json, out_file, indent=2, ensure_ascii=False)

        print("‚úÖ R√©sultat JSON enregistr√© dans etape4_output.json")

    except json.JSONDecodeError:
        # Si le mod√®le a renvoy√© un texte non strictement JSON
        with open("etape4_output_raw.txt", "w", encoding="utf-8") as raw_file:
            raw_file.write(result_text)

        print("‚ö†Ô∏è R√©ponse non valide JSON. R√©sultat brut enregistr√© dans etape4_output_raw.txt")
else:
    print("‚ùå Erreur lors de l‚Äôappel √† Ollama :", response.status_code)
    print(response.text)
